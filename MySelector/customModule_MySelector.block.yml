id: customModule_MySelector
label: MySelector
category: '[customModule]'

templates:
  imports: from gnuradio import customModule
  make: customModule.MySelector()

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
-   id: type
    label: Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: enabled
    label: Enabled
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    option_labels: [Enabled, Disabled]
-   id: num_inputs
    label: Number of Inputs
    dtype: int
    default: 2
-   id: num_outputs
    label: Number of Outputs
    dtype: int
    default: 2
-   id: input_index
    label: Input Index
    dtype: int
    default: 0
-   id: output_index
    label: Output Index
    dtype: int
    default: 0
-   id: vlen
    label: Vector Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: showports
    label: Show Msg Ports
    dtype: bool
    default: 'True'
    options: ['False', 'True']
    option_labels: ['Yes', 'No']
    hide: part

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }
    multiplicity: ${ num_inputs }
-   domain: message
    id: en
    optional: true
    hide: ${ showports }
-   domain: message
    id: iindex
    optional: true
    hide: ${ showports }
-   domain: message
    id: oindex
    optional: true
    hide: ${ showports }

outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }
    multiplicity: ${ num_outputs }
    
asserts:
- ${ vlen > 0 }

templates:
    imports: from gnuradio import blocks
    make: |-
        blocks.selector(${type.size}*${vlen},${input_index},${output_index})
        self.${id}.set_enabled(${enabled})
    callbacks:
    - set_enabled(${enabled})
    - set_input_index(${input_index})
    - set_output_index(${output_index})

cpp_templates:
    includes: ['#include <gnuradio/blocks/copy.h>']
    declarations: 'blocks::selector::sptr ${id};'
    make: |-
        this->${id} = blocks::selector::make(${type.size}*${vlen},${input_index},${output_index});
        self->${id}.set_enabled(${enabled});
    callbacks:
    - set_enabled(${enabled})
    - set_input_index(${input_index})
    - set_output_index(${output_index})
    translations:
        'True': 'true'
        'False': 'false'

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
